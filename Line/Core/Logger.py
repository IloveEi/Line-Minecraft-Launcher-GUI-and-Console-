import datetime


class Logger:
    def __init__(self, Project: str, Version: str, ShowVersion: bool, LogFile: str):
        self.Project = Project
        self.Version = Version
        self.ShowVersion = ShowVersion
        self.LogFile = LogFile
        self.init_log()

    def init_log(self) -> None:
        with open(self.LogFile, 'w') as f:
            f.write(
                "Summary\n" + ""+\
                "Project:" + self.Project + "\n" +\
                "Date:" + str(datetime.datetime.now()) + "\n" +\
                "Version:" + self.Version + "\n" +\
                "This Log generated by Line Logger\n"
            )

    def Warning(self, Info):
        with open(self.LogFile, 'a') as f:
            f.write("[Warning]:" + Info + "\n")

    def Error(self, Info):
        with open(self.LogFile, 'a') as f:
            f.write("[Error]:" + Info + "\n")

    def Safe(self, Info):
        with open(self.LogFile, 'a', encoding='GBK') as f:
            f.write('[Safe]:' + Info + "\n")

    def Any(self, Prompt, Info):
        with open(self.LogFile, 'a') as f:
            f.write(('[{Prompt}]:{Info}').format(Prompt = Prompt, Info = Info) + "\n")

    def LOGGER_STOP_WORKING(self):
        with open(self.LogFile, 'a') as f:
            f.write(
                "\n\n" +\
                "Program exited\n" + ""+\
                "Date:" + str(datetime.datetime.now()) + "\n" +\
                "This Log generated by Line Logger\n"
            )